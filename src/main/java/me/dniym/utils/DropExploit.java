/*
package main.java.me.dniym.utils;

public class DropExploit {
    private static final HashSet<DropExploit> trackedBlocks = new HashSet<>();
    private final Block block;
    private final HashMap<ItemStack, Long> items = new HashMap<>();
    private final int id = 0;

    public DropExploit(Block block) {
        this.block = block;
        trackedBlocks.add(this);
    }

    public static DropExploit findBlock(Block block) {

        for (DropExploit de : trackedBlocks)
            if (de.block.equals(block))
                return de;
        return new DropExploit(block);
    }

    public boolean tick(ItemStack item) {
        NBTItem nbti = new NBTItem(item);

        //if( !nbti.hasKey("TimeStamp")) {
        if (nbti.getLong("TimeStamp") == null || nbti.getLong("TimeStamp") == 0) {
            nbti.setLong("TimeStamp", System.currentTimeMillis() + 2500L);
            return false;
        }

        if (System.currentTimeMillis() >= nbti.getLong("TimeStamp")) {
            nbti.setLong("TimeStamp", System.currentTimeMillis() + 2500L);
            return false;
        }
        fListener.getLog().append2(Msg.StaffMsgDropperExploit.getValue(block.getLocation().toString()));
        return true;
    }

    public boolean tick(ItemStack item) {

        NamespacedKey ts = new NamespacedKey(IllegalStack.getPlugin(), "timeStamp");

        if (!item.hasItemMeta() || !item.getItemMeta().getPersistentDataContainer().has(ts, PersistentDataType.LONG)) {
            if (item.hasItemMeta())
            setData(item);
            return false;
        }

        if (System.currentTimeMillis() >= item.getItemMeta().getPersistentDataContainer().get(ts, PersistentDataType.LONG)) {
            setData(item);
            return false;
        }


        fListener.getLog().append2(Msg.StaffMsgDropperExploit.getValue(block.getLocation().toString()));
        return true;

    }

    private void setData(ItemStack item) {

        ItemMeta meta = item.getItemMeta();
        PersistentDataContainer data = meta.getPersistentDataContainer();
        NamespacedKey ts = new NamespacedKey(IllegalStack.getPlugin(), "timeStamp");
        meta.getPersistentDataContainer().set(ts, PersistentDataType.LONG, System.currentTimeMillis() + 2500l);
        item.setItemMeta(meta);

    }

}
 */
